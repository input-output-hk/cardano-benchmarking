#!/usr/bin/env bash

read -e -i 3 -p "How many nodes will you connect? " NNODES

if [ -z "${NNODES}" -o $((NNODES * 1)) -lt 1 -o $((NNODES * 1)) -gt 99 ]; then
	echo "out of range or I couldn't interpret your input."
	exit 1
fi

echo "read number of nodes: ${NNODES}"

nodenames=({a..z})
NNAMES0=
for N in $(seq 0 $((NNODES - 1))); do
       	NNAMES0="${NNAMES0} node-${nodenames[$N]}"
done

read -e -a NNAMES -i "${NNAMES0}" -p "Name the nodes (list of ${NNODES}): "

if [ ${#NNAMES[@]} -ne $NNODES ]; then
	echo "not the same number of nodes (${NNODES}) as names (${#NNAMES[@]}), or I couldn't interpret your input."
	exit 1
fi

echo "node names: ${NNAMES[@]}"

read -e -i 8024 -p "Indicate the port for the web service (1024 - 65535): " WEBPORT

if [ -z "${WEBPORT}" -o $((WEBPORT * 1)) -lt 1024 -o $((WEBPORT * 1)) -gt 65535 ]; then
	echo "out of range or I couldn't interpret your input."
	exit 1
fi

echo "the service will be listening on http://localhost:${WEBPORT}"

read -e -i "P" -p "Connections shall be made via pipes (P) or networking sockets (S)? " CONN REMAINDER

if [ "${CONN}" != "P" -a "${CONN}" != "S" ]; then
	echo "I couldn't interpret your input: ${CONN}."
	exit 1
fi

echo "read: ${CONN}"

if [ "${CONN}" = "S" ]; then
  read -e -i 3000 -p "Indicate the port base to listen for connections (1024 - 65535): " PBASE

  if [ -z "${PBASE}" -o $((PBASE * 1)) -lt 1024 -o $((PBASE * 1)) -gt 65535 ]; then
	echo "out of range or I couldn't interpret your input."
	exit 1
  fi

  echo "nodes will need to connect to this host and port starting with: ${PBASE}"
fi

if [ "${CONN}" = "P" ]; then
  read -e -i "/tmp/rtview-sockets" -p "Indicate the location for the pipes: " PIPELOC

  if [ -z "${PIPELOC}" ]; then
	echo "empty input."
	exit 1
  fi

  if [ -e "${PIPELOC}" ]; then
	echo "output location for the pipes already exists."
	echo "please, choose a different location."
	exit 1
  fi

  mkdir -p "${PIPELOC}"
  chmod 700 "${PIPELOC}"

  echo "nodes will need to write to the pipes created in: ${PIPELOC}"
fi


## prepare configuration

sed -e '/##ACCEPTORS##/q' rt-view.yaml0 > rt-view.yaml

{
  echo
  echo "traceAcceptAt:"
  for N in $(seq 0 $((NNODES - 1))); do
      echo "    - nodeName: \"${NNAMES[$N]}\""
      echo "      remoteAddr:"
      if [ "$CONN" = "S" ]; then
          echo "        tag: RemoteSocket"
          echo "        contents:"
          echo "          - \"127.0.0.1\""
          echo "          - \"$((PBASE + N))\""
          echo
      fi
      if [ "$CONN" = "P" ]; then
          echo "        tag: RemotePipe"
          echo "        contents: \"${PIPELOC}/${NNAMES[$N]}\""
          echo
      fi
      echo
  done
} >> rt-view.yaml


## start service

echo
echo "Starting RTview on http://localhost:${WEBPORT}"

exec ./cardano-rt-view-service --port ${WEBPORT} \
  --config rt-view.yaml \
  --static static

